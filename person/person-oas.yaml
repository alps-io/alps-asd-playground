# *******************************************************************
# generated by "unified"
# date: Sun Apr 18 2021 17:50:47 GMT-0400 (Eastern Daylight Time)
# http://github.com/mamund/alps-unified
# *******************************************************************

openapi: 3.0.1
info:
  title: 'ALPS Person Profile'
  description: "A sample ALPS tutorial. This shows how to use ALPS to document the three key parts of any semantic profile:\n\n - **ontology**: _particular meaning_ \n - **taxonomy**: _arrangement of the parts_ \n - **choreography**: _rules for interaction between the parts_ \n\n See [Dan Klyn's blog post](https://understandinggroup.com/ia-theory/understanding-information-architecture), his [short video](https://vimeo.com/8866160), and the book [Information Architecture](https://www.amazon.com/Information-Architecture-Beyond-Louis-Rosenfeld/dp/1491911689) for more on these three elements."
  version: 1.0.0
paths:
  /goHome:
    get:
      summary: 'Navigation action to return the Home resource state.'
      operationId: goHome
      responses:
        '200':
          description: goHome
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/home'
  /goPersonCollection:
    get:
      summary: 'Navigation action that returns a list of person records.'
      operationId: goPersonCollection
      responses:
        '200':
          description: goPersonCollection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personCollection'
  /goPersonFilter:
    get:
      summary: 'Navigation action that returns a filtered list of person records.'
      operationId: goPersonFilter
      responses:
        '200':
          description: goPersonFilter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personCollection'
  /goPersonItem:
    get:
      summary: 'Navigation action that returns a single person record.'
      operationId: goPersonItem
      responses:
        '200':
          description: goPersonItem
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personItem'
  /goPersonStatus:
    get:
      summary: 'Navigation action that returns the status value of a single person record.'
      operationId: goPersonStatus
      responses:
        '200':
          description: goPersonStatus
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personStatus'
  /doPersonCreate:
    post:
      summary: 'Add a new person record to the collection.'
      operationId: doPersonCreate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/personItem'
      responses:
        '200':
          description: 'add doPersonCreate'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personItem'
  /doPersonUpdate:
    put:
      summary: 'Update an existing person record.'
      operationId: doPersonUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/personItem'
      responses:
        '200':
          description: 'add doPersonUpdate'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personItem'
  /doPersonStatusUpdate:
    put:
      summary: 'Update the status value of an existing person record.'
      operationId: doPersonStatusUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/personStatus'
      responses:
        '200':
          description: 'add doPersonStatusUpdate'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personStatus'
components:
  schemas:
    home:
      type: object
      properties:
        'home':
          type: string
          example: 829qbqweueb3b6b4873zws
        'goHome':
          type: string
          example: 882iznikvtorio3h4g60va
        'goPersonCollection':
          type: string
          example: ex2ws59u66s8a48vxl49
      description: 'Starting point for the API'
    personCollection:
      type: object
      properties:
        'identifier':
          type: string
          example: '8301'
        'givenName':
          type: string
          example: y5llynf3zeg7acz94ufj6h
        'familyName':
          type: string
          example: mi408l9ae5fvqnvjw8oeci
        'status':
          type: string
          example: b2rg3edth60dhtgmgnka9r
        'goHome':
          type: string
          example: crfosdbxtpqtuveghm1ur
        'goPersonCollection':
          type: string
          example: p0epmbgdu4qi31vz2ae8d
        'goPersonFilter':
          type: string
          example: t2jzkv0g34tw28fizeb4
        'goPersonItem':
          type: string
          example: glptzgvtnpjtu4qs50seoa
        'doPersonCreate':
          type: string
          example: 5velbr8f3blkuskqlvv4s8
      description: 'Aggregate object that represents a collection of person records'
    personItem:
      type: object
      properties:
        'identifier':
          type: string
          example: '2002'
        'givenName':
          type: string
          example: kgw8h63z1xeaxpvxd3im5
        'familyName':
          type: string
          example: bvh56gfqc9nla4pt02an9c
        'status':
          type: string
          example: 0e51tjq781meljq7pp1vix
        'goHome':
          type: string
          example: 18rjy6y600oofrvu6mx99o
        'goPersonCollection':
          type: string
          example: rapxcm75o2jnri0nxttf8
        'goPersonItem':
          type: string
          example: 7mb8n4n21zlo5u7pkenx6h
        'goPersonStatus':
          type: string
          example: 7h8ia5tqbutbyqhdln6srj
        'doPersonUpdate':
          type: string
          example: rdkd5mozs66wnu7fzye5
      description: 'Aggregate object that represents a single person.'
    personStatus:
      type: object
      properties:
        'identifier':
          type: string
          example: '3766'
        'status':
          type: string
          example: jlb6n3we3x49zp4kwvvrl
        'goHome':
          type: string
          example: pd5t0pp562f4cj8r2ybat4
        'goPersonCollection':
          type: string
          example: g65dih887wp8qo789kjw6d
        'goPersonItem':
          type: string
          example: 4w23fo3tm9qa2r7is80t95
        'goPersonStatus':
          type: string
          example: 8xzuca8ytzg3ho2khmwqu4
        'doPersonStatusUpdate':
          type: string
          example: klwnt4cqx5rruhtu2orcl
      description: 'The status of a single person record.'
