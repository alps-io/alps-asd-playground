# *******************************************************************
# generated by "unified"
# date: Mon Apr 19 2021 17:17:10 GMT-0400 (Eastern Daylight Time)
# http://github.com/mamund/alps-unified
# *******************************************************************

openapi: 3.0.2
info:
  title: 'ALPS Person Profile'
  description: "A sample ALPS tutorial. This shows how to use ALPS to document the three key parts of any semantic profile:\n\n - **ontology**: _particular meaning_ \n - **taxonomy**: _arrangement of the parts_ \n - **choreography**: _rules for interaction between the parts_ \n\n See [Dan Klyn's blog post](https://understandinggroup.com/ia-theory/understanding-information-architecture), his [short video](https://vimeo.com/8866160), and the book [Information Architecture](https://www.amazon.com/Information-Architecture-Beyond-Louis-Rosenfeld/dp/1491911689) for more on these three elements."
  version: 1.0.0
paths:
  /goHome:
    get:
      summary: 'Navigation action to return the Home resource state.'
      operationId: goHome
      responses:
        '200':
          description: goHome
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/home'
  /goPersonCollection:
    get:
      summary: 'Navigation action that returns a list of person records.'
      operationId: goPersonCollection
      responses:
        '200':
          description: goPersonCollection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personCollection'
  /goPersonFilter:
    get:
      summary: 'Navigation action that returns a filtered list of person records.'
      operationId: goPersonFilter
      responses:
        '200':
          description: goPersonFilter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personCollection'
  /goPersonItem:
    get:
      summary: 'Navigation action that returns a single person record.'
      operationId: goPersonItem
      responses:
        '200':
          description: goPersonItem
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personItem'
  /goPersonStatus:
    get:
      summary: 'Navigation action that returns the status value of a single person record.'
      operationId: goPersonStatus
      responses:
        '200':
          description: goPersonStatus
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personStatus'
  /doPersonCreate:
    post:
      summary: 'Add a new person record to the collection.'
      operationId: doPersonCreate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/personItem'
      responses:
        '200':
          description: 'add doPersonCreate'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personItem'
  /doPersonUpdate:
    put:
      summary: 'Update an existing person record.'
      operationId: doPersonUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/personItem'
      responses:
        '200':
          description: 'add doPersonUpdate'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personItem'
  /doPersonStatusUpdate:
    put:
      summary: 'Update the status value of an existing person record.'
      operationId: doPersonStatusUpdate
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/personStatus'
      responses:
        '200':
          description: 'add doPersonStatusUpdate'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/personStatus'
components:
  schemas:
    home:
      type: object
      properties:
        'home':
          type: string
          example: x51g5lzig8agn2l2645lf
        'goHome':
          type: string
          example: 6jxbyz5tr2yh87ee92kx94
        'goPersonCollection':
          type: string
          example: 5mw2v9p8j79mhqandobwv
      description: 'Starting point for the API'
    personCollection:
      type: object
      properties:
        'identifier':
          type: string
          example: '8514'
        'givenName':
          type: string
          example: o7o3u1ulqzfsdewhpsditc
        'familyName':
          type: string
          example: 5fbyrx737qgu2uo25nw
        'status':
          type: string
          example: 85gholz5mmkn3wx9c4ndk
        'goHome':
          type: string
          example: mrkd89l4r4ai627kah5x8b
        'goPersonCollection':
          type: string
          example: iot2e1endkj8a7fvhjdes
        'goPersonFilter':
          type: string
          example: e1bgq483ipv917w46d3j5b
        'goPersonItem':
          type: string
          example: d0ubf3ld39p05uhyx87f2ri
        'doPersonCreate':
          type: string
          example: 3m4qgxajn4pzry4t6uswfg
      description: 'Aggregate object that represents a collection of person records'
    personItem:
      type: object
      properties:
        'identifier':
          type: string
          example: '5660'
        'givenName':
          type: string
          example: 9zhax42ycxq2ez8jaqnw4i
        'familyName':
          type: string
          example: c905fgcbmsncjxlfewyynd
        'status':
          type: string
          example: 2jg5w8tbq4fb12smgdma2v
        'goHome':
          type: string
          example: vkzmimrcx1dxz3wiyscsd
        'goPersonCollection':
          type: string
          example: k5dzn7mxcqgf30p5w7q64m
        'goPersonItem':
          type: string
          example: legspk3qfu9l4m0yr2flh
        'goPersonStatus':
          type: string
          example: oymtuepd6oflo632yy0hgs
        'doPersonUpdate':
          type: string
          example: bpcb6jk5p0bkb475w61a8o
      description: 'Aggregate object that represents a single person.'
    personStatus:
      type: object
      properties:
        'identifier':
          type: string
          example: '6840'
        'status':
          type: string
          example: mlda54oryob7w6jzaeduvg
        'goHome':
          type: string
          example: 226uyp2314qbjkhxevunj
        'goPersonCollection':
          type: string
          example: tn3pixty1nwuatongosha
        'goPersonItem':
          type: string
          example: 8cpaqum6biihcpui0leq0r
        'goPersonStatus':
          type: string
          example: vy86g3nscmh9uvowudnvdj
        'doPersonStatusUpdate':
          type: string
          example: 4stjblfkls61mzzxg3s8cu
      description: 'The status of a single person record.'
